const server = http.createServer((req, res) => {
  const parsedUrl = url.parse(req.url, true);
  const path = parsedUrl.pathname;

  // Log the request URL and timestamp
  const logEntry = `URL: ${req.url}, Timestamp: ${new Date().toISOString()}\n`;
  fs.appendFile('log.txt', logEntry, (err) => {
    if (err) {
      console.error('Failed to write to log file');
    }
  });

  if (path === '/documentation') {
    fs.readFile('./movie_api/documentation.html', 'utf8', (err, data) => {
      if (err) {
        res.writeHead(404, { 'Content-Type': 'text/plain' });
        res.write('Not Found');
      } else {
        res.writeHead(200, { 'Content-Type': 'text/html' });
        res.write(data);
      }
      res.end();
    });
  } else {
    res.writeHead(200, { 'Content-Type': 'text/plain' });
    res.write('Hello, World!');
    res.end();
  }
});
URL: /, Timestamp: 2024-08-01T18:58:16.469Z
URL: /favicon.ico, Timestamp: 2024-08-01T18:58:16.983Z
URL: /, Timestamp: 2024-08-01T18:58:25.776Z
URL: /favicon.ico, Timestamp: 2024-08-01T18:58:26.070Z
URL: /index.html, Timestamp: 2024-08-01T18:58:33.838Z
URL: /index.html, Timestamp: 2024-08-01T18:58:42.061Z
URL: /documentation, Timestamp: 2024-08-01T18:59:19.252Z
URL: /documentation.html, Timestamp: 2024-08-01T18:59:32.645Z
URL: /invalid, Timestamp: 2024-08-01T18:59:45.275Z
URL: /, Timestamp: 2024-08-01T19:07:31.402Z
URL: /documentation, Timestamp: 2024-08-01T19:07:41.746Z
URL: /documentation.html, Timestamp: 2024-08-01T19:07:45.723Z
URL: /index.html, Timestamp: 2024-08-01T19:07:49.075Z
URL: /index, Timestamp: 2024-08-01T19:07:52.641Z
